/home/hxzh02/Package/Anaconda3/envs/pytorch/bin/python3.7 /media/hxzh02/SB@home/hxzh/Yolov8_Efficient/val.py
val: data=data/coco.yaml, weights=weights/yolov8s-seg.pt, save_json=True, save_hybrid=False, conf=0.001, iou=0.6, max_det=300, half=False, dnn=False, plots=True, batch_size=32, imgsz=640, task=val, device=cpu, workers=8, single_cls=False, augment=False, verbose=False, save_txt=False, save_conf=False, project=runs/val, name=exp, exist_ok=False
YOLOv8 ðŸš€ 5db4e41 Python-3.7.11 torch-1.10.0+cu111 CPU

Ultralytics YOLO ðŸš€ 0.0.59 Python-3.7.11 torch-1.10.0+cu111 CPU
Fusing layers...
YOLOv8s-seg summary: 195 layers, 11810560 parameters, 0 gradients, 42.6 GFLOPs
Forcing --batch-size 1 square inference (1,3,640,640) for non-PyTorch models
val: Scanning /media/hxzh02/SB@home/hxzh/Yolov8_Efficient/datasets/coco/labels/val2017.cache... 4952 images, 48 backgrounds, 0 corrupt: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 5000/5000 [00:00<?, ?it/s]
val: Caching images (4.1GB disk): 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 5000/5000 [00:00<00:00, 71426.69it/s]
                 Class     Images  Instances      Box(P          R      mAP50  mAP50-95)     Mask(P          R      mAP50  mAP50-95): 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 5000/5000 [42:56<00:00,  1.94it/s]
                   all       5000      36335      0.701      0.563      0.615      0.444      0.698      0.542      0.587      0.374
                person       5000      10777      0.811      0.712      0.804      0.576      0.816      0.696      0.784      0.464
               bicycle       5000        314      0.769      0.446      0.565      0.336      0.696      0.386      0.467      0.196
                   car       5000       1918      0.736      0.589      0.664      0.445      0.735      0.563      0.631      0.369
            motorcycle       5000        367      0.805      0.673      0.752      0.479      0.799      0.643        0.7      0.367
              airplane       5000        143      0.812       0.86      0.906      0.728      0.812      0.847      0.867      0.546
                   bus       5000        283      0.839      0.754      0.832      0.692      0.831      0.727      0.811      0.629
                 train       5000        190      0.849      0.858      0.901      0.687      0.841      0.832      0.868      0.661
                 truck       5000        414      0.601      0.484      0.541      0.371      0.586      0.449      0.501      0.328
                  boat       5000        424      0.679      0.417      0.495       0.28      0.699      0.403      0.479      0.215
         traffic light       5000        634       0.69      0.438      0.506      0.263      0.703      0.431      0.506      0.231
          fire hydrant       5000        101      0.888      0.781      0.848      0.698      0.899      0.782      0.844      0.622
             stop sign       5000         75      0.744      0.667       0.73      0.653      0.757      0.665      0.729      0.624
         parking meter       5000         60      0.763      0.617      0.684      0.476      0.785        0.6      0.663      0.452
                 bench       5000        411      0.638      0.341      0.393      0.271      0.662      0.326      0.358      0.185
                  bird       5000        427      0.638      0.446      0.512      0.344      0.647       0.44      0.499       0.28
                   cat       5000        202      0.835      0.875        0.9      0.716      0.853      0.871      0.909      0.698
                   dog       5000        218      0.765       0.78      0.808       0.68      0.783      0.775        0.8      0.617
                 horse       5000        272      0.848      0.754      0.829      0.632      0.833      0.734      0.793      0.456
                 sheep       5000        354      0.718      0.734      0.754      0.554      0.721      0.709      0.734       0.46
                   cow       5000        372      0.791      0.735      0.804      0.605      0.773      0.707      0.761      0.485
              elephant       5000        252      0.748      0.861      0.845       0.66      0.775      0.869      0.851      0.582
                  bear       5000         71      0.843      0.831      0.852      0.726      0.843      0.817      0.852      0.694
                 zebra       5000        266      0.854      0.846      0.917      0.709      0.874       0.85      0.915      0.621
               giraffe       5000        232       0.87      0.866      0.908      0.725      0.887      0.875      0.913      0.589
              backpack       5000        371      0.565      0.283      0.334      0.187      0.558      0.261      0.309      0.162
              umbrella       5000        407      0.711      0.579      0.641      0.448      0.751      0.592       0.66      0.447
               handbag       5000        540      0.512      0.229      0.301      0.171      0.551      0.217       0.29      0.141
                   tie       5000        252      0.736      0.486      0.564      0.367      0.723      0.464      0.526      0.309
              suitcase       5000        299       0.71      0.541       0.63      0.433      0.706      0.512      0.607      0.403
               frisbee       5000        115      0.831      0.809      0.872      0.682      0.835        0.8      0.855        0.6
                  skis       5000        241      0.669       0.39      0.474      0.255      0.475      0.266      0.266     0.0707
             snowboard       5000         69      0.629      0.464      0.544      0.411      0.649      0.449      0.508      0.276
           sports ball       5000        260      0.754      0.581       0.63      0.428      0.726      0.541       0.57      0.348
                  kite       5000        327      0.679      0.569       0.63      0.446      0.653      0.538      0.598      0.308
          baseball bat       5000        145      0.683      0.517      0.542      0.347      0.708      0.517      0.529      0.252
        baseball glove       5000        148      0.819      0.595      0.624      0.374      0.819      0.581      0.616      0.363
            skateboard       5000        179      0.851      0.765        0.8      0.574      0.815      0.726      0.742      0.377
             surfboard       5000        267      0.795      0.577      0.654      0.424       0.78      0.543      0.606      0.329
         tennis racket       5000        225      0.837      0.756      0.807      0.543      0.864      0.765      0.821      0.543
                bottle       5000       1013      0.659      0.514      0.567      0.385      0.653       0.48      0.538      0.337
            wine glass       5000        341      0.717      0.467      0.544      0.355       0.71      0.443      0.503      0.288
                   cup       5000        895       0.61      0.517      0.572      0.423      0.623      0.494      0.551      0.387
                  fork       5000        215      0.648      0.437      0.525      0.365      0.612      0.386      0.429      0.207
                 knife       5000        325      0.526      0.268      0.307      0.189      0.502      0.245      0.261      0.125
                 spoon       5000        253      0.482      0.308      0.308        0.2      0.466      0.281      0.276      0.136
                  bowl       5000        623      0.607      0.559      0.596       0.45      0.592      0.523       0.54       0.34
                banana       5000        370      0.551       0.33      0.409      0.264      0.538      0.295      0.369      0.207
                 apple       5000        236      0.482      0.314      0.316      0.227      0.456      0.277      0.299      0.208
              sandwich       5000        177      0.564      0.476      0.546      0.415      0.519      0.412      0.455      0.346
                orange       5000        285      0.473      0.365      0.374      0.281      0.474      0.344      0.365      0.257
              broccoli       5000        312      0.559      0.378      0.446      0.264      0.582       0.38      0.455      0.237
                carrot       5000        365      0.466      0.346      0.338      0.221      0.474      0.334      0.344      0.189
               hot dog       5000        125      0.744      0.464      0.544       0.41      0.671      0.408      0.442      0.307
                 pizza       5000        284      0.722      0.687      0.736      0.563      0.749      0.682      0.719      0.517
                 donut       5000        328      0.633      0.524      0.591      0.461      0.664      0.524      0.587      0.439
                  cake       5000        310      0.655      0.526        0.6      0.393      0.659      0.513      0.578      0.369
                 chair       5000       1771      0.648      0.431      0.513      0.332      0.621      0.387      0.442      0.214
                 couch       5000        261      0.627      0.598      0.644       0.48      0.616      0.556      0.585       0.38
          potted plant       5000        342      0.606       0.48      0.498      0.299      0.585      0.444      0.462      0.206
                   bed       5000        163      0.688      0.626      0.665      0.459      0.652      0.564      0.571      0.356
          dining table       5000        695      0.584      0.452      0.483      0.316      0.491      0.355      0.336      0.135
                toilet       5000        179       0.77      0.803      0.826      0.659       0.77      0.799      0.828      0.611
                    tv       5000        288      0.716      0.722      0.764      0.588      0.741      0.717       0.77      0.557
                laptop       5000        231      0.752       0.74      0.779      0.649      0.724      0.697      0.698       0.46
                 mouse       5000        106      0.761      0.764      0.789      0.613      0.779      0.764       0.78      0.559
                remote       5000        283      0.599      0.452      0.509       0.32       0.63      0.442      0.503       0.26
              keyboard       5000        153      0.675      0.641      0.731      0.557      0.699      0.634      0.731      0.521
            cell phone       5000        262      0.621      0.507      0.551       0.38       0.63      0.481      0.513      0.332
             microwave       5000         55      0.716      0.745      0.783      0.628      0.746      0.727      0.767      0.575
                  oven       5000        143      0.637      0.545      0.583      0.404      0.623       0.51      0.539      0.336
               toaster       5000          9      0.976      0.444      0.577      0.392          1      0.405      0.577      0.439
                  sink       5000        225      0.636      0.573      0.619      0.418      0.672      0.587      0.642      0.384
          refrigerator       5000        126      0.749      0.698      0.753      0.613      0.777      0.706      0.758      0.588
                  book       5000       1129       0.54      0.151      0.251      0.133      0.487      0.121      0.196     0.0861
                 clock       5000        267      0.737      0.663       0.71      0.505      0.769      0.674      0.726      0.483
                  vase       5000        274       0.65      0.563       0.58      0.406      0.647      0.542      0.559      0.354
              scissors       5000         36      0.612      0.361      0.407      0.331      0.635      0.361      0.393      0.217
            teddy bear       5000        190      0.747      0.642      0.674      0.513      0.761      0.635      0.669      0.473
            hair drier       5000         11          1          0     0.0242     0.0079          1          0     0.0242     0.0105
            toothbrush       5000         57      0.588      0.421      0.405      0.274      0.597      0.421      0.414      0.174
Speed: 1.1ms pre-process, 107.6ms inference, 0.0ms loss, 1.0ms post-process per image
Saving runs/segment/val9/predictions.json...

Evaluating pycocotools mAP using runs/segment/val9/predictions.json and /media/hxzh02/SB@home/hxzh/Yolov8_Efficient/datasets/coco/annotations/instances_val2017.json...
loading annotations into memory...
Done (t=0.22s)
creating index...
index created!
Loading and preparing results...
DONE (t=3.77s)
creating index...
index created!
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=37.67s).
Accumulating evaluation results...
DONE (t=6.54s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.446
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.620
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.483
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.255
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.493
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.604
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.355
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.588
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.633
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.446
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.695
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.793
Running per image evaluation...
Evaluate annotation type *segm*
DONE (t=42.71s).
Accumulating evaluation results...
DONE (t=6.59s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.370
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.588
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.393
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.179
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.416
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.532
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.307
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.489
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.520
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.312
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.584
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.704
Results saved to runs/val/exp63
data: {'path': PosixPath('/media/hxzh02/SB@home/hxzh/Yolov8_Efficient/datasets/coco'), 'train': '/media/hxzh02/SB@home/hxzh/Yolov8_Efficient/datasets/coco/train2017.txt', 'val': '/media/hxzh02/SB@home/hxzh/Yolov8_Efficient/datasets/coco/val2017.txt', 'test': '/media/hxzh02/SB@home/hxzh/Yolov8_Efficient/datasets/coco/test-dev2017.txt', 'names': {0: 'person', 1: 'bicycle', 2: 'car', 3: 'motorcycle', 4: 'airplane', 5: 'bus', 6: 'train', 7: 'truck', 8: 'boat', 9: 'traffic light', 10: 'fire hydrant', 11: 'stop sign', 12: 'parking meter', 13: 'bench', 14: 'bird', 15: 'cat', 16: 'dog', 17: 'horse', 18: 'sheep', 19: 'cow', 20: 'elephant', 21: 'bear', 22: 'zebra', 23: 'giraffe', 24: 'backpack', 25: 'umbrella', 26: 'handbag', 27: 'tie', 28: 'suitcase', 29: 'frisbee', 30: 'skis', 31: 'snowboard', 32: 'sports ball', 33: 'kite', 34: 'baseball bat', 35: 'baseball glove', 36: 'skateboard', 37: 'surfboard', 38: 'tennis racket', 39: 'bottle', 40: 'wine glass', 41: 'cup', 42: 'fork', 43: 'knife', 44: 'spoon', 45: 'bowl', 46: 'banana', 47: 'apple', 48: 'sandwich', 49: 'orange', 50: 'broccoli', 51: 'carrot', 52: 'hot dog', 53: 'pizza', 54: 'donut', 55: 'cake', 56: 'chair', 57: 'couch', 58: 'potted plant', 59: 'bed', 60: 'dining table', 61: 'toilet', 62: 'tv', 63: 'laptop', 64: 'mouse', 65: 'remote', 66: 'keyboard', 67: 'cell phone', 68: 'microwave', 69: 'oven', 70: 'toaster', 71: 'sink', 72: 'refrigerator', 73: 'book', 74: 'clock', 75: 'vase', 76: 'scissors', 77: 'teddy bear', 78: 'hair drier', 79: 'toothbrush'}, 'download': "from utils.general import download, Path\n# Download labels\nsegments = True  # segment or box labels\ndir = Path(yaml['path'])  # dataset root dir\nurl = 'https://github.com/ultralytics/yolov5/releases/download/v1.0/'\nurls = [url + ('coco2017labels-segments.zip' if segments else 'coco2017labels.zip')]  # labels\ndownload(urls, dir=dir.parent)\n# Download data\nurls = ['http://images.cocodataset.org/zips/train2017.zip',  # 19G, 118k images\n        'http://images.cocodataset.org/zips/val2017.zip',  # 1G, 5k images\n        'http://images.cocodataset.org/zips/test2017.zip']  # 7G, 41k images (optional)\ndownload(urls, dir=dir / 'images', threads=3)", 'nc': 80}
nc: 80

Process finished with exit code 0
